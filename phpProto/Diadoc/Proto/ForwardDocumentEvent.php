<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ForwardDocumentEvent.proto

namespace Diadoc\Proto;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>Diadoc.Proto.ForwardDocumentEvent</code>
 */
class ForwardDocumentEvent extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.Diadoc.Proto.Timestamp Timestamp = 1;</code>
     */
    private $Timestamp = null;
    /**
     * Generated from protobuf field <code>string ToBoxId = 2;</code>
     */
    private $ToBoxId = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Diadoc\Proto\Timestamp $Timestamp
     *     @type string $ToBoxId
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\ForwardDocumentEvent::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.Diadoc.Proto.Timestamp Timestamp = 1;</code>
     * @return \Diadoc\Proto\Timestamp
     */
    public function getTimestamp()
    {
        return $this->Timestamp;
    }

    /**
     * Generated from protobuf field <code>.Diadoc.Proto.Timestamp Timestamp = 1;</code>
     * @param \Diadoc\Proto\Timestamp $var
     * @return $this
     */
    public function setTimestamp($var)
    {
        GPBUtil::checkMessage($var, \Diadoc\Proto\Timestamp::class);
        $this->Timestamp = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string ToBoxId = 2;</code>
     * @return string
     */
    public function getToBoxId()
    {
        return $this->ToBoxId;
    }

    /**
     * Generated from protobuf field <code>string ToBoxId = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setToBoxId($var)
    {
        GPBUtil::checkString($var, True);
        $this->ToBoxId = $var;

        return $this;
    }

}

