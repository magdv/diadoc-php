<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Invoicing/AcceptanceCertificateInfo.proto

namespace Diadoc\Proto\Invoicing;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>Diadoc.Proto.Invoicing.AcceptanceCertificateSignatureInfo</code>
 */
class AcceptanceCertificateSignatureInfo extends \Google\Protobuf\Internal\Message
{
    /**
     * дата подписи акта исполнителем / заказчиком
     *
     * Generated from protobuf field <code>string SignatureDate = 1;</code>
     */
    private $SignatureDate = '';
    /**
     * лицо, подписывающее со стороны исполнителя / заказчика
     *
     * Generated from protobuf field <code>.Diadoc.Proto.Invoicing.Official Official = 2;</code>
     */
    private $Official = null;
    /**
     * сведения о доверенности подписывающего со стороны исполнителя / заказчика
     *
     * Generated from protobuf field <code>.Diadoc.Proto.Invoicing.Attorney Attorney = 3;</code>
     */
    private $Attorney = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $SignatureDate
     *           дата подписи акта исполнителем / заказчиком
     *     @type \Diadoc\Proto\Invoicing\Official $Official
     *           лицо, подписывающее со стороны исполнителя / заказчика
     *     @type \Diadoc\Proto\Invoicing\Attorney $Attorney
     *           сведения о доверенности подписывающего со стороны исполнителя / заказчика
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Invoicing\AcceptanceCertificateInfo::initOnce();
        parent::__construct($data);
    }

    /**
     * дата подписи акта исполнителем / заказчиком
     *
     * Generated from protobuf field <code>string SignatureDate = 1;</code>
     * @return string
     */
    public function getSignatureDate()
    {
        return $this->SignatureDate;
    }

    /**
     * дата подписи акта исполнителем / заказчиком
     *
     * Generated from protobuf field <code>string SignatureDate = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setSignatureDate($var)
    {
        GPBUtil::checkString($var, True);
        $this->SignatureDate = $var;

        return $this;
    }

    /**
     * лицо, подписывающее со стороны исполнителя / заказчика
     *
     * Generated from protobuf field <code>.Diadoc.Proto.Invoicing.Official Official = 2;</code>
     * @return \Diadoc\Proto\Invoicing\Official
     */
    public function getOfficial()
    {
        return $this->Official;
    }

    /**
     * лицо, подписывающее со стороны исполнителя / заказчика
     *
     * Generated from protobuf field <code>.Diadoc.Proto.Invoicing.Official Official = 2;</code>
     * @param \Diadoc\Proto\Invoicing\Official $var
     * @return $this
     */
    public function setOfficial($var)
    {
        GPBUtil::checkMessage($var, \Diadoc\Proto\Invoicing\Official::class);
        $this->Official = $var;

        return $this;
    }

    /**
     * сведения о доверенности подписывающего со стороны исполнителя / заказчика
     *
     * Generated from protobuf field <code>.Diadoc.Proto.Invoicing.Attorney Attorney = 3;</code>
     * @return \Diadoc\Proto\Invoicing\Attorney
     */
    public function getAttorney()
    {
        return $this->Attorney;
    }

    /**
     * сведения о доверенности подписывающего со стороны исполнителя / заказчика
     *
     * Generated from protobuf field <code>.Diadoc.Proto.Invoicing.Attorney Attorney = 3;</code>
     * @param \Diadoc\Proto\Invoicing\Attorney $var
     * @return $this
     */
    public function setAttorney($var)
    {
        GPBUtil::checkMessage($var, \Diadoc\Proto\Invoicing\Attorney::class);
        $this->Attorney = $var;

        return $this;
    }

}

