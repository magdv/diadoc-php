<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Invoicing/Torg12Info.proto

namespace Diadoc\Proto\Invoicing;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>Diadoc.Proto.Invoicing.Torg12Item</code>
 */
class Torg12Item extends \Google\Protobuf\Internal\Message
{
    /**
     * наименование
     *
     * Generated from protobuf field <code>string Name = 1;</code>
     */
    private $Name = '';
    /**
     * характеристика
     *
     * Generated from protobuf field <code>string Feature = 2;</code>
     */
    private $Feature = '';
    /**
     * сорт товара
     *
     * Generated from protobuf field <code>string Sort = 3;</code>
     */
    private $Sort = '';
    /**
     * артикул
     *
     * Generated from protobuf field <code>string NomenclatureArticle = 4;</code>
     */
    private $NomenclatureArticle = '';
    /**
     * код товара
     *
     * Generated from protobuf field <code>string Code = 5;</code>
     */
    private $Code = '';
    /**
     * код единицы измерения
     *
     * Generated from protobuf field <code>string UnitCode = 6;</code>
     */
    private $UnitCode = '';
    /**
     * наименование единицы измерения
     *
     * Generated from protobuf field <code>string UnitName = 7;</code>
     */
    private $UnitName = '';
    /**
     * вид упаковки
     *
     * Generated from protobuf field <code>string ParcelType = 8;</code>
     */
    private $ParcelType = '';
    /**
     * количество в одном месте
     *
     * Generated from protobuf field <code>string ParcelCapacity = 9;</code>
     */
    private $ParcelCapacity = '';
    /**
     * количество мест
     *
     * Generated from protobuf field <code>string ParcelsQuantity = 10;</code>
     */
    private $ParcelsQuantity = '';
    /**
     * брутто
     *
     * Generated from protobuf field <code>string GrossQuantity = 11;</code>
     */
    private $GrossQuantity = '';
    /**
     * нетто // количество (масса)
     *
     * Generated from protobuf field <code>string Quantity = 12;</code>
     */
    private $Quantity = '';
    /**
     * цена
     *
     * Generated from protobuf field <code>string Price = 13;</code>
     */
    private $Price = '';
    /**
     * ставка налога
     *
     * Generated from protobuf field <code>string TaxRate = 14;</code>
     */
    private $TaxRate = '';
    /**
     * сумма без учета налога
     *
     * Generated from protobuf field <code>string SubtotalWithVatExcluded = 15;</code>
     */
    private $SubtotalWithVatExcluded = '';
    /**
     * сумма налога
     *
     * Generated from protobuf field <code>string Vat = 16;</code>
     */
    private $Vat = '';
    /**
     * сумма всего
     *
     * Generated from protobuf field <code>string Subtotal = 17;</code>
     */
    private $Subtotal = '';
    /**
     * информационное поле сведений о товаре
     *
     * Generated from protobuf field <code>string AdditionalInfo = 18;</code>
     */
    private $AdditionalInfo = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $Name
     *           наименование
     *     @type string $Feature
     *           характеристика
     *     @type string $Sort
     *           сорт товара
     *     @type string $NomenclatureArticle
     *           артикул
     *     @type string $Code
     *           код товара
     *     @type string $UnitCode
     *           код единицы измерения
     *     @type string $UnitName
     *           наименование единицы измерения
     *     @type string $ParcelType
     *           вид упаковки
     *     @type string $ParcelCapacity
     *           количество в одном месте
     *     @type string $ParcelsQuantity
     *           количество мест
     *     @type string $GrossQuantity
     *           брутто
     *     @type string $Quantity
     *           нетто // количество (масса)
     *     @type string $Price
     *           цена
     *     @type string $TaxRate
     *           ставка налога
     *     @type string $SubtotalWithVatExcluded
     *           сумма без учета налога
     *     @type string $Vat
     *           сумма налога
     *     @type string $Subtotal
     *           сумма всего
     *     @type string $AdditionalInfo
     *           информационное поле сведений о товаре
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Invoicing\Torg12Info::initOnce();
        parent::__construct($data);
    }

    /**
     * наименование
     *
     * Generated from protobuf field <code>string Name = 1;</code>
     * @return string
     */
    public function getName()
    {
        return $this->Name;
    }

    /**
     * наименование
     *
     * Generated from protobuf field <code>string Name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->Name = $var;

        return $this;
    }

    /**
     * характеристика
     *
     * Generated from protobuf field <code>string Feature = 2;</code>
     * @return string
     */
    public function getFeature()
    {
        return $this->Feature;
    }

    /**
     * характеристика
     *
     * Generated from protobuf field <code>string Feature = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setFeature($var)
    {
        GPBUtil::checkString($var, True);
        $this->Feature = $var;

        return $this;
    }

    /**
     * сорт товара
     *
     * Generated from protobuf field <code>string Sort = 3;</code>
     * @return string
     */
    public function getSort()
    {
        return $this->Sort;
    }

    /**
     * сорт товара
     *
     * Generated from protobuf field <code>string Sort = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setSort($var)
    {
        GPBUtil::checkString($var, True);
        $this->Sort = $var;

        return $this;
    }

    /**
     * артикул
     *
     * Generated from protobuf field <code>string NomenclatureArticle = 4;</code>
     * @return string
     */
    public function getNomenclatureArticle()
    {
        return $this->NomenclatureArticle;
    }

    /**
     * артикул
     *
     * Generated from protobuf field <code>string NomenclatureArticle = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setNomenclatureArticle($var)
    {
        GPBUtil::checkString($var, True);
        $this->NomenclatureArticle = $var;

        return $this;
    }

    /**
     * код товара
     *
     * Generated from protobuf field <code>string Code = 5;</code>
     * @return string
     */
    public function getCode()
    {
        return $this->Code;
    }

    /**
     * код товара
     *
     * Generated from protobuf field <code>string Code = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setCode($var)
    {
        GPBUtil::checkString($var, True);
        $this->Code = $var;

        return $this;
    }

    /**
     * код единицы измерения
     *
     * Generated from protobuf field <code>string UnitCode = 6;</code>
     * @return string
     */
    public function getUnitCode()
    {
        return $this->UnitCode;
    }

    /**
     * код единицы измерения
     *
     * Generated from protobuf field <code>string UnitCode = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setUnitCode($var)
    {
        GPBUtil::checkString($var, True);
        $this->UnitCode = $var;

        return $this;
    }

    /**
     * наименование единицы измерения
     *
     * Generated from protobuf field <code>string UnitName = 7;</code>
     * @return string
     */
    public function getUnitName()
    {
        return $this->UnitName;
    }

    /**
     * наименование единицы измерения
     *
     * Generated from protobuf field <code>string UnitName = 7;</code>
     * @param string $var
     * @return $this
     */
    public function setUnitName($var)
    {
        GPBUtil::checkString($var, True);
        $this->UnitName = $var;

        return $this;
    }

    /**
     * вид упаковки
     *
     * Generated from protobuf field <code>string ParcelType = 8;</code>
     * @return string
     */
    public function getParcelType()
    {
        return $this->ParcelType;
    }

    /**
     * вид упаковки
     *
     * Generated from protobuf field <code>string ParcelType = 8;</code>
     * @param string $var
     * @return $this
     */
    public function setParcelType($var)
    {
        GPBUtil::checkString($var, True);
        $this->ParcelType = $var;

        return $this;
    }

    /**
     * количество в одном месте
     *
     * Generated from protobuf field <code>string ParcelCapacity = 9;</code>
     * @return string
     */
    public function getParcelCapacity()
    {
        return $this->ParcelCapacity;
    }

    /**
     * количество в одном месте
     *
     * Generated from protobuf field <code>string ParcelCapacity = 9;</code>
     * @param string $var
     * @return $this
     */
    public function setParcelCapacity($var)
    {
        GPBUtil::checkString($var, True);
        $this->ParcelCapacity = $var;

        return $this;
    }

    /**
     * количество мест
     *
     * Generated from protobuf field <code>string ParcelsQuantity = 10;</code>
     * @return string
     */
    public function getParcelsQuantity()
    {
        return $this->ParcelsQuantity;
    }

    /**
     * количество мест
     *
     * Generated from protobuf field <code>string ParcelsQuantity = 10;</code>
     * @param string $var
     * @return $this
     */
    public function setParcelsQuantity($var)
    {
        GPBUtil::checkString($var, True);
        $this->ParcelsQuantity = $var;

        return $this;
    }

    /**
     * брутто
     *
     * Generated from protobuf field <code>string GrossQuantity = 11;</code>
     * @return string
     */
    public function getGrossQuantity()
    {
        return $this->GrossQuantity;
    }

    /**
     * брутто
     *
     * Generated from protobuf field <code>string GrossQuantity = 11;</code>
     * @param string $var
     * @return $this
     */
    public function setGrossQuantity($var)
    {
        GPBUtil::checkString($var, True);
        $this->GrossQuantity = $var;

        return $this;
    }

    /**
     * нетто // количество (масса)
     *
     * Generated from protobuf field <code>string Quantity = 12;</code>
     * @return string
     */
    public function getQuantity()
    {
        return $this->Quantity;
    }

    /**
     * нетто // количество (масса)
     *
     * Generated from protobuf field <code>string Quantity = 12;</code>
     * @param string $var
     * @return $this
     */
    public function setQuantity($var)
    {
        GPBUtil::checkString($var, True);
        $this->Quantity = $var;

        return $this;
    }

    /**
     * цена
     *
     * Generated from protobuf field <code>string Price = 13;</code>
     * @return string
     */
    public function getPrice()
    {
        return $this->Price;
    }

    /**
     * цена
     *
     * Generated from protobuf field <code>string Price = 13;</code>
     * @param string $var
     * @return $this
     */
    public function setPrice($var)
    {
        GPBUtil::checkString($var, True);
        $this->Price = $var;

        return $this;
    }

    /**
     * ставка налога
     *
     * Generated from protobuf field <code>string TaxRate = 14;</code>
     * @return string
     */
    public function getTaxRate()
    {
        return $this->TaxRate;
    }

    /**
     * ставка налога
     *
     * Generated from protobuf field <code>string TaxRate = 14;</code>
     * @param string $var
     * @return $this
     */
    public function setTaxRate($var)
    {
        GPBUtil::checkString($var, True);
        $this->TaxRate = $var;

        return $this;
    }

    /**
     * сумма без учета налога
     *
     * Generated from protobuf field <code>string SubtotalWithVatExcluded = 15;</code>
     * @return string
     */
    public function getSubtotalWithVatExcluded()
    {
        return $this->SubtotalWithVatExcluded;
    }

    /**
     * сумма без учета налога
     *
     * Generated from protobuf field <code>string SubtotalWithVatExcluded = 15;</code>
     * @param string $var
     * @return $this
     */
    public function setSubtotalWithVatExcluded($var)
    {
        GPBUtil::checkString($var, True);
        $this->SubtotalWithVatExcluded = $var;

        return $this;
    }

    /**
     * сумма налога
     *
     * Generated from protobuf field <code>string Vat = 16;</code>
     * @return string
     */
    public function getVat()
    {
        return $this->Vat;
    }

    /**
     * сумма налога
     *
     * Generated from protobuf field <code>string Vat = 16;</code>
     * @param string $var
     * @return $this
     */
    public function setVat($var)
    {
        GPBUtil::checkString($var, True);
        $this->Vat = $var;

        return $this;
    }

    /**
     * сумма всего
     *
     * Generated from protobuf field <code>string Subtotal = 17;</code>
     * @return string
     */
    public function getSubtotal()
    {
        return $this->Subtotal;
    }

    /**
     * сумма всего
     *
     * Generated from protobuf field <code>string Subtotal = 17;</code>
     * @param string $var
     * @return $this
     */
    public function setSubtotal($var)
    {
        GPBUtil::checkString($var, True);
        $this->Subtotal = $var;

        return $this;
    }

    /**
     * информационное поле сведений о товаре
     *
     * Generated from protobuf field <code>string AdditionalInfo = 18;</code>
     * @return string
     */
    public function getAdditionalInfo()
    {
        return $this->AdditionalInfo;
    }

    /**
     * информационное поле сведений о товаре
     *
     * Generated from protobuf field <code>string AdditionalInfo = 18;</code>
     * @param string $var
     * @return $this
     */
    public function setAdditionalInfo($var)
    {
        GPBUtil::checkString($var, True);
        $this->AdditionalInfo = $var;

        return $this;
    }

}

