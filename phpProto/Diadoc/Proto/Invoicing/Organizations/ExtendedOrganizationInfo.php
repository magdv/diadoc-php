<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Invoicing/ExtendedOrganizationInfo.proto

namespace Diadoc\Proto\Invoicing\Organizations;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>Diadoc.Proto.Invoicing.Organizations.ExtendedOrganizationInfo</code>
 */
class ExtendedOrganizationInfo extends \Google\Protobuf\Internal\Message
{
    /**
     * идентификатор ящика в Диадоке
     *
     * Generated from protobuf field <code>string BoxId = 1;</code>
     */
    private $BoxId = '';
    /**
     * название //НаимОрг
     *
     * Generated from protobuf field <code>string OrgName = 2;</code>
     */
    private $OrgName = '';
    /**
     * ИНН //ИНН ФЛ-ИНН
     *
     * Generated from protobuf field <code>string Inn = 3;</code>
     */
    private $Inn = '';
    /**
     * КПП //КПП
     *
     * Generated from protobuf field <code>string Kpp = 4;</code>
     */
    private $Kpp = '';
    /**
     * адрес //Адрес
     *
     * Generated from protobuf field <code>.Diadoc.Proto.Address Address = 5;</code>
     */
    private $Address = null;
    /**
     * идентификатор участника ЭДО
     *
     * Generated from protobuf field <code>string FnsParticipantId = 6;</code>
     */
    private $FnsParticipantId = '';
    /**
     * СвИП - СвЮЛУч - СвИнНеУч
     *
     * Generated from protobuf field <code>.Diadoc.Proto.Invoicing.Organizations.OrgType OrgType = 7;</code>
     */
    private $OrgType = 0;
    /**
     * код организационно-правовой формы по ОКОПФ
     *
     * Generated from protobuf field <code>string Okopf = 8;</code>
     */
    private $Okopf = '';
    /**
     * код в общероссийском классификаторе предприятий и организаций //ОКПО
     *
     * Generated from protobuf field <code>string Okpo = 9;</code>
     */
    private $Okpo = '';
    /**
     * код основного вида деятельности по ОКДП
     *
     * Generated from protobuf field <code>string Okdp = 10;</code>
     */
    private $Okdp = '';
    /**
     * Номер контактного телефона/факс //Тлф
     *
     * Generated from protobuf field <code>string Phone = 11;</code>
     */
    private $Phone = '';
    /**
     * Адрес электронной почты // ЭлПочта
     *
     * Generated from protobuf field <code>string Email = 12;</code>
     */
    private $Email = '';
    /**
     * Корреспондентский счёт // КорСчет
     *
     * Generated from protobuf field <code>string CorrespondentAccount = 13;</code>
     */
    private $CorrespondentAccount = '';
    /**
     * номер банковского счета //НамерСчета
     *
     * Generated from protobuf field <code>string BankAccountNumber = 14;</code>
     */
    private $BankAccountNumber = '';
    /**
     * название банка //НаимБанк
     *
     * Generated from protobuf field <code>string BankName = 15;</code>
     */
    private $BankName = '';
    /**
     * БИК //БИК
     *
     * Generated from protobuf field <code>string BankId = 16;</code>
     */
    private $BankId = '';
    /**
     * структурное подразделение //СтруктПодр
     *
     * Generated from protobuf field <code>string Department = 17;</code>
     */
    private $Department = '';
    /**
     * Информация для участника // ИнфДляУчаст
     *
     * Generated from protobuf field <code>string OrganizationAdditionalInfo = 18;</code>
     */
    private $OrganizationAdditionalInfo = '';
    /**
     * Иные сведения, идентифицирующие ФЛ или ЮЛ //ИныеСвед
     *
     * Generated from protobuf field <code>string OrganizationOrPersonInfo = 19;</code>
     */
    private $OrganizationOrPersonInfo = '';
    /**
     * Реквизиты свидетельства о государственной регистрации ИП //СвГосРегИп
     *
     * Generated from protobuf field <code>string IndividualEntityRegistrationCertificate = 20;</code>
     */
    private $IndividualEntityRegistrationCertificate = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $BoxId
     *           идентификатор ящика в Диадоке
     *     @type string $OrgName
     *           название //НаимОрг
     *     @type string $Inn
     *           ИНН //ИНН ФЛ-ИНН
     *     @type string $Kpp
     *           КПП //КПП
     *     @type \Diadoc\Proto\Address $Address
     *           адрес //Адрес
     *     @type string $FnsParticipantId
     *           идентификатор участника ЭДО
     *     @type int $OrgType
     *           СвИП - СвЮЛУч - СвИнНеУч
     *     @type string $Okopf
     *           код организационно-правовой формы по ОКОПФ
     *     @type string $Okpo
     *           код в общероссийском классификаторе предприятий и организаций //ОКПО
     *     @type string $Okdp
     *           код основного вида деятельности по ОКДП
     *     @type string $Phone
     *           Номер контактного телефона/факс //Тлф
     *     @type string $Email
     *           Адрес электронной почты // ЭлПочта
     *     @type string $CorrespondentAccount
     *           Корреспондентский счёт // КорСчет
     *     @type string $BankAccountNumber
     *           номер банковского счета //НамерСчета
     *     @type string $BankName
     *           название банка //НаимБанк
     *     @type string $BankId
     *           БИК //БИК
     *     @type string $Department
     *           структурное подразделение //СтруктПодр
     *     @type string $OrganizationAdditionalInfo
     *           Информация для участника // ИнфДляУчаст
     *     @type string $OrganizationOrPersonInfo
     *           Иные сведения, идентифицирующие ФЛ или ЮЛ //ИныеСвед
     *     @type string $IndividualEntityRegistrationCertificate
     *           Реквизиты свидетельства о государственной регистрации ИП //СвГосРегИп
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Invoicing\ExtendedOrganizationInfo::initOnce();
        parent::__construct($data);
    }

    /**
     * идентификатор ящика в Диадоке
     *
     * Generated from protobuf field <code>string BoxId = 1;</code>
     * @return string
     */
    public function getBoxId()
    {
        return $this->BoxId;
    }

    /**
     * идентификатор ящика в Диадоке
     *
     * Generated from protobuf field <code>string BoxId = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setBoxId($var)
    {
        GPBUtil::checkString($var, True);
        $this->BoxId = $var;

        return $this;
    }

    /**
     * название //НаимОрг
     *
     * Generated from protobuf field <code>string OrgName = 2;</code>
     * @return string
     */
    public function getOrgName()
    {
        return $this->OrgName;
    }

    /**
     * название //НаимОрг
     *
     * Generated from protobuf field <code>string OrgName = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setOrgName($var)
    {
        GPBUtil::checkString($var, True);
        $this->OrgName = $var;

        return $this;
    }

    /**
     * ИНН //ИНН ФЛ-ИНН
     *
     * Generated from protobuf field <code>string Inn = 3;</code>
     * @return string
     */
    public function getInn()
    {
        return $this->Inn;
    }

    /**
     * ИНН //ИНН ФЛ-ИНН
     *
     * Generated from protobuf field <code>string Inn = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setInn($var)
    {
        GPBUtil::checkString($var, True);
        $this->Inn = $var;

        return $this;
    }

    /**
     * КПП //КПП
     *
     * Generated from protobuf field <code>string Kpp = 4;</code>
     * @return string
     */
    public function getKpp()
    {
        return $this->Kpp;
    }

    /**
     * КПП //КПП
     *
     * Generated from protobuf field <code>string Kpp = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setKpp($var)
    {
        GPBUtil::checkString($var, True);
        $this->Kpp = $var;

        return $this;
    }

    /**
     * адрес //Адрес
     *
     * Generated from protobuf field <code>.Diadoc.Proto.Address Address = 5;</code>
     * @return \Diadoc\Proto\Address
     */
    public function getAddress()
    {
        return $this->Address;
    }

    /**
     * адрес //Адрес
     *
     * Generated from protobuf field <code>.Diadoc.Proto.Address Address = 5;</code>
     * @param \Diadoc\Proto\Address $var
     * @return $this
     */
    public function setAddress($var)
    {
        GPBUtil::checkMessage($var, \Diadoc\Proto\Address::class);
        $this->Address = $var;

        return $this;
    }

    /**
     * идентификатор участника ЭДО
     *
     * Generated from protobuf field <code>string FnsParticipantId = 6;</code>
     * @return string
     */
    public function getFnsParticipantId()
    {
        return $this->FnsParticipantId;
    }

    /**
     * идентификатор участника ЭДО
     *
     * Generated from protobuf field <code>string FnsParticipantId = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setFnsParticipantId($var)
    {
        GPBUtil::checkString($var, True);
        $this->FnsParticipantId = $var;

        return $this;
    }

    /**
     * СвИП - СвЮЛУч - СвИнНеУч
     *
     * Generated from protobuf field <code>.Diadoc.Proto.Invoicing.Organizations.OrgType OrgType = 7;</code>
     * @return int
     */
    public function getOrgType()
    {
        return $this->OrgType;
    }

    /**
     * СвИП - СвЮЛУч - СвИнНеУч
     *
     * Generated from protobuf field <code>.Diadoc.Proto.Invoicing.Organizations.OrgType OrgType = 7;</code>
     * @param int $var
     * @return $this
     */
    public function setOrgType($var)
    {
        GPBUtil::checkEnum($var, \Diadoc\Proto\Invoicing\Organizations\OrgType::class);
        $this->OrgType = $var;

        return $this;
    }

    /**
     * код организационно-правовой формы по ОКОПФ
     *
     * Generated from protobuf field <code>string Okopf = 8;</code>
     * @return string
     */
    public function getOkopf()
    {
        return $this->Okopf;
    }

    /**
     * код организационно-правовой формы по ОКОПФ
     *
     * Generated from protobuf field <code>string Okopf = 8;</code>
     * @param string $var
     * @return $this
     */
    public function setOkopf($var)
    {
        GPBUtil::checkString($var, True);
        $this->Okopf = $var;

        return $this;
    }

    /**
     * код в общероссийском классификаторе предприятий и организаций //ОКПО
     *
     * Generated from protobuf field <code>string Okpo = 9;</code>
     * @return string
     */
    public function getOkpo()
    {
        return $this->Okpo;
    }

    /**
     * код в общероссийском классификаторе предприятий и организаций //ОКПО
     *
     * Generated from protobuf field <code>string Okpo = 9;</code>
     * @param string $var
     * @return $this
     */
    public function setOkpo($var)
    {
        GPBUtil::checkString($var, True);
        $this->Okpo = $var;

        return $this;
    }

    /**
     * код основного вида деятельности по ОКДП
     *
     * Generated from protobuf field <code>string Okdp = 10;</code>
     * @return string
     */
    public function getOkdp()
    {
        return $this->Okdp;
    }

    /**
     * код основного вида деятельности по ОКДП
     *
     * Generated from protobuf field <code>string Okdp = 10;</code>
     * @param string $var
     * @return $this
     */
    public function setOkdp($var)
    {
        GPBUtil::checkString($var, True);
        $this->Okdp = $var;

        return $this;
    }

    /**
     * Номер контактного телефона/факс //Тлф
     *
     * Generated from protobuf field <code>string Phone = 11;</code>
     * @return string
     */
    public function getPhone()
    {
        return $this->Phone;
    }

    /**
     * Номер контактного телефона/факс //Тлф
     *
     * Generated from protobuf field <code>string Phone = 11;</code>
     * @param string $var
     * @return $this
     */
    public function setPhone($var)
    {
        GPBUtil::checkString($var, True);
        $this->Phone = $var;

        return $this;
    }

    /**
     * Адрес электронной почты // ЭлПочта
     *
     * Generated from protobuf field <code>string Email = 12;</code>
     * @return string
     */
    public function getEmail()
    {
        return $this->Email;
    }

    /**
     * Адрес электронной почты // ЭлПочта
     *
     * Generated from protobuf field <code>string Email = 12;</code>
     * @param string $var
     * @return $this
     */
    public function setEmail($var)
    {
        GPBUtil::checkString($var, True);
        $this->Email = $var;

        return $this;
    }

    /**
     * Корреспондентский счёт // КорСчет
     *
     * Generated from protobuf field <code>string CorrespondentAccount = 13;</code>
     * @return string
     */
    public function getCorrespondentAccount()
    {
        return $this->CorrespondentAccount;
    }

    /**
     * Корреспондентский счёт // КорСчет
     *
     * Generated from protobuf field <code>string CorrespondentAccount = 13;</code>
     * @param string $var
     * @return $this
     */
    public function setCorrespondentAccount($var)
    {
        GPBUtil::checkString($var, True);
        $this->CorrespondentAccount = $var;

        return $this;
    }

    /**
     * номер банковского счета //НамерСчета
     *
     * Generated from protobuf field <code>string BankAccountNumber = 14;</code>
     * @return string
     */
    public function getBankAccountNumber()
    {
        return $this->BankAccountNumber;
    }

    /**
     * номер банковского счета //НамерСчета
     *
     * Generated from protobuf field <code>string BankAccountNumber = 14;</code>
     * @param string $var
     * @return $this
     */
    public function setBankAccountNumber($var)
    {
        GPBUtil::checkString($var, True);
        $this->BankAccountNumber = $var;

        return $this;
    }

    /**
     * название банка //НаимБанк
     *
     * Generated from protobuf field <code>string BankName = 15;</code>
     * @return string
     */
    public function getBankName()
    {
        return $this->BankName;
    }

    /**
     * название банка //НаимБанк
     *
     * Generated from protobuf field <code>string BankName = 15;</code>
     * @param string $var
     * @return $this
     */
    public function setBankName($var)
    {
        GPBUtil::checkString($var, True);
        $this->BankName = $var;

        return $this;
    }

    /**
     * БИК //БИК
     *
     * Generated from protobuf field <code>string BankId = 16;</code>
     * @return string
     */
    public function getBankId()
    {
        return $this->BankId;
    }

    /**
     * БИК //БИК
     *
     * Generated from protobuf field <code>string BankId = 16;</code>
     * @param string $var
     * @return $this
     */
    public function setBankId($var)
    {
        GPBUtil::checkString($var, True);
        $this->BankId = $var;

        return $this;
    }

    /**
     * структурное подразделение //СтруктПодр
     *
     * Generated from protobuf field <code>string Department = 17;</code>
     * @return string
     */
    public function getDepartment()
    {
        return $this->Department;
    }

    /**
     * структурное подразделение //СтруктПодр
     *
     * Generated from protobuf field <code>string Department = 17;</code>
     * @param string $var
     * @return $this
     */
    public function setDepartment($var)
    {
        GPBUtil::checkString($var, True);
        $this->Department = $var;

        return $this;
    }

    /**
     * Информация для участника // ИнфДляУчаст
     *
     * Generated from protobuf field <code>string OrganizationAdditionalInfo = 18;</code>
     * @return string
     */
    public function getOrganizationAdditionalInfo()
    {
        return $this->OrganizationAdditionalInfo;
    }

    /**
     * Информация для участника // ИнфДляУчаст
     *
     * Generated from protobuf field <code>string OrganizationAdditionalInfo = 18;</code>
     * @param string $var
     * @return $this
     */
    public function setOrganizationAdditionalInfo($var)
    {
        GPBUtil::checkString($var, True);
        $this->OrganizationAdditionalInfo = $var;

        return $this;
    }

    /**
     * Иные сведения, идентифицирующие ФЛ или ЮЛ //ИныеСвед
     *
     * Generated from protobuf field <code>string OrganizationOrPersonInfo = 19;</code>
     * @return string
     */
    public function getOrganizationOrPersonInfo()
    {
        return $this->OrganizationOrPersonInfo;
    }

    /**
     * Иные сведения, идентифицирующие ФЛ или ЮЛ //ИныеСвед
     *
     * Generated from protobuf field <code>string OrganizationOrPersonInfo = 19;</code>
     * @param string $var
     * @return $this
     */
    public function setOrganizationOrPersonInfo($var)
    {
        GPBUtil::checkString($var, True);
        $this->OrganizationOrPersonInfo = $var;

        return $this;
    }

    /**
     * Реквизиты свидетельства о государственной регистрации ИП //СвГосРегИп
     *
     * Generated from protobuf field <code>string IndividualEntityRegistrationCertificate = 20;</code>
     * @return string
     */
    public function getIndividualEntityRegistrationCertificate()
    {
        return $this->IndividualEntityRegistrationCertificate;
    }

    /**
     * Реквизиты свидетельства о государственной регистрации ИП //СвГосРегИп
     *
     * Generated from protobuf field <code>string IndividualEntityRegistrationCertificate = 20;</code>
     * @param string $var
     * @return $this
     */
    public function setIndividualEntityRegistrationCertificate($var)
    {
        GPBUtil::checkString($var, True);
        $this->IndividualEntityRegistrationCertificate = $var;

        return $this;
    }

}

